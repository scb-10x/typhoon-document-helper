@import "tailwindcss";
@import "./styles/syntax-highlighting.css";

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;

  /* Stripe-inspired Purple Theme */
  --primary-purple: 103, 58, 183;
  --primary-purple-light: 149, 117, 205;
  --primary-purple-dark: 81, 45, 168;
  --primary-purple-50: 243, 240, 255;
  --primary-purple-100: 230, 223, 255;
  --primary-purple-200: 202, 190, 245;
  --primary-purple-600: 103, 58, 183;
  --primary-purple-700: 81, 45, 168;
  --primary-purple-800: 69, 39, 143;

  --neutral-50: 250, 250, 250;
  --neutral-100: 245, 245, 245;
  --neutral-200: 229, 229, 229;
  --neutral-300: 212, 212, 212;
  --neutral-400: 163, 163, 163;
  --neutral-500: 115, 115, 115;
  --neutral-600: 82, 82, 82;
  --neutral-700: 64, 64, 64;
  --neutral-800: 38, 38, 38;
  --neutral-900: 23, 23, 23;

  --success: 0, 200, 83;
  --warning: 255, 152, 0;
  --error: 244, 67, 54;
  --info: 33, 150, 243;
  
  --background: 255, 255, 255;
  --foreground: 0, 0, 0;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Custom component styles */
@layer components {
  .btn-primary {
    @apply bg-purple-600 hover:bg-purple-700 text-white rounded-lg px-4 py-2 font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2;
  }
  
  .btn-secondary {
    @apply bg-white hover:bg-gray-50 text-purple-700 border border-gray-300 rounded-lg px-4 py-2 font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2;
  }
  
  .btn-tertiary {
    @apply text-purple-700 hover:bg-purple-50 rounded-lg px-3 py-1.5 font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2;
  }
  
  .input-field {
    @apply bg-white border border-gray-300 focus:border-purple-500 focus:ring-2 focus:ring-purple-200 rounded-lg px-3 py-2 text-gray-900 placeholder-gray-500 focus:outline-none transition-colors duration-200;
  }
  
  .card {
    @apply bg-white border border-gray-200 rounded-lg shadow-sm overflow-hidden;
  }
  
  .badge {
    @apply inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium;
  }
  
  .badge-purple {
    @apply bg-purple-100 text-purple-800;
  }
  
  .badge-gray {
    @apply bg-gray-100 text-gray-800;
  }
}

/* Add animation styles */
@layer utilities {
  .animate-fadeIn {
    animation: fadeIn 0.2s ease-out;
  }
  
  .animate-popIn {
    animation: popIn 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }
  
  .animate-slideUp {
    animation: slideUp 0.3s ease-out;
  }
  
  .animate-slideDown {
    animation: slideDown 0.3s ease-out;
  }
  
  .animate-slideIn {
    animation: slideIn 0.2s ease-out;
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  @keyframes popIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  @keyframes slideUp {
    from {
      transform: translateY(10px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes slideDown {
    from {
      transform: translateY(-10px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes slideIn {
    from {
      transform: translateY(-10px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
  
  /* Custom scrollbar styles */
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  /* Custom focus styles */
  .focus-ring {
    @apply focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2;
  }
  
  /* Custom shadow styles */
  .shadow-stripe-sm {
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }
  
  .shadow-stripe-md {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
  
  .shadow-stripe-lg {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }
}

/* Tiptap editor styling */
.editor-content-container {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
  position: relative;
}

.ProseMirror {
  position: relative;
  height: 100%;
  width: 100%;
  outline: none;
  padding: 1.25rem;
}

.ProseMirror hr {
  height: 0;
  border: none;
  border-top: 2px solid #e5e7eb;
  margin: 2rem 0;
}

/* Starter heading styles for consistency */
.ProseMirror h1 {
  @apply text-3xl font-bold mb-4;
}

.ProseMirror h2 {
  @apply text-2xl font-bold mb-3;
}

.ProseMirror h3 {
  @apply text-xl font-semibold mb-2;
}

.ProseMirror p {
  @apply leading-6 mb-4;
}

.ProseMirror ul {
  @apply list-disc pl-6 mb-4;
}

.ProseMirror ol {
  @apply list-decimal pl-6 mb-4;
}

.ProseMirror blockquote {
  @apply border-l-4 border-gray-300 pl-4 italic my-4 text-gray-700;
}

/* Code styling is now in syntax-highlighting.css */
.ProseMirror code:not([class*="language-"]) {
  @apply font-mono text-sm px-1 py-0.5 rounded text-gray-200;
}

/* Pre styling is now in syntax-highlighting.css */
/* .ProseMirror pre {
  @apply bg-gray-800 text-white p-4 rounded-md my-4 overflow-x-auto;
}

.ProseMirror pre code {
  @apply bg-transparent text-white p-0 block;
} */

.ProseMirror img {
  max-width: 100%;
  height: auto;
  @apply my-4 rounded-md;
}

/* Editor toolbar and document styling */
.editor-toolbar {
  @apply bg-white border-b border-gray-200 p-2 flex flex-wrap items-center sticky top-0 z-10;
}

.editor-container {
  @apply w-full max-w-6xl mx-auto bg-white rounded-xl shadow-xl overflow-hidden flex flex-col;
  @apply border border-gray-200;
}

.hide-scrollbar::-webkit-scrollbar {
  display: none;
}

.hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

/* Animation for loading indicator in AI processing */
@keyframes loading {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(200%);
  }
}

.editor-loading .ProseMirror {
  @apply opacity-70;
  pointer-events: none; /* Technically redundant with setEditable(false), but good fallback */
}

.ai-processing {
  position: relative;
}

.ai-footer {
  @apply fixed bottom-4 left-1/2 transform -translate-x-1/2 bg-white rounded-full shadow-lg px-2 py-1.5 z-50;
  @apply flex items-center gap-1 w-auto;
}

.ai-expanded {
  @apply w-auto;
}

/* Task list styles */
.ProseMirror ul[data-type="taskList"] {
  list-style: none;
  padding: 0;
  margin: 1em 0;
}

.ProseMirror ul[data-type="taskList"] li {
  display: flex;
  align-items: center;
  margin-bottom: 0.5em;
  gap: 0.25em;
}

.ProseMirror ul[data-type="taskList"] li > label {
  margin-right: 0;
  user-select: none;
  display: flex;
  align-items: center;
  min-width: 1.25em;
}

.ProseMirror ul[data-type="taskList"] li > div {
  flex: 1;
  display: flex;
  align-items: center;
}

/* Fix for vertical alignment issue */
.ProseMirror ul[data-type="taskList"] li > div > p {
  margin: 0;
  padding: 0;
  line-height: normal;
}

.ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"] {
  cursor: pointer;
  width: 1.1em;
  height: 1.1em;
  margin: 0;
  border-radius: 3px;
  border: 1px solid #cbd5e1;
  position: relative;
  appearance: none;
  -webkit-appearance: none;
  transition: background 0.2s ease, border 0.2s ease;
}

.ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"]:hover {
  border-color: #a1a1aa;
  background-color: #f8fafc;
}

.ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"]:checked {
  background-color: #673ab7;
  border-color: #673ab7;
}

.ProseMirror ul[data-type="taskList"] li > label input[type="checkbox"]:checked::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  height: 40%;
  width: 25%;
  border-right: 2px solid white;
  border-bottom: 2px solid white;
  transform: translate(-75%, -60%) rotate(45deg);
}

.task-list-item.checked > div > p {
  text-decoration: line-through;
  opacity: 0.5;
}

/* Editor image styling */
.editor-image {
  max-width: 100%;
  height: auto;
  display: block;
  margin: 1rem auto;
  border-radius: 4px;
}

/* Add a subtle border/shadow for better visibility */
.editor-image:not([src*=".svg"]) {
  border: 1px solid #e5e7eb;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* REMOVED Reading Mode styles */
/*
.reading-mode .editor-toolbar,
.reading-mode .ai-footer {
  display: none;
}

.reading-mode .editor-content-container {
  max-width: 800px;
  margin: 2rem auto;
  padding: 1rem;
}

.reading-mode .ProseMirror {
  min-height: auto;
  padding: 0;
  border: none;
  box-shadow: none;
}

.exit-reading-mode {
  position: fixed;
  top: 1rem;
  right: 1rem;
  z-index: 10001; 
  background-color: rgba(124, 58, 237, 0.9); 
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 9999px; 
  border: none;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: background-color 0.2s ease-out;
}

.exit-reading-mode:hover {
  background-color: rgba(109, 40, 217, 1); 
}
*/

.ProseMirror p,
.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror h4,
.ProseMirror h5,
.ProseMirror h6,
.ProseMirror li,
.ProseMirror blockquote {
  line-height: inherit !important;
}

/* Table styling */
.ProseMirror table {
  border-collapse: collapse;
  margin: 1.5em 0;
  overflow: hidden;
  width: 100%;
  table-layout: fixed;
}

.ProseMirror table td,
.ProseMirror table th {
  border: 1px solid #e2e8f0;
  padding: 0.75em;
  position: relative;
  vertical-align: top;
  min-width: 100px;
  transition: background-color 0.2s ease;
}

.ProseMirror table th {
  background-color: #f8fafc;
  font-weight: 600;
  text-align: left;
}

.ProseMirror table p {
  margin: 0;
}

/* Hover effect for better cell identification */
.ProseMirror table td:hover,
.ProseMirror table th:hover {
  background-color: rgba(124, 58, 237, 0.05);
}

/* Focus styles for active cell */
.ProseMirror table td:focus,
.ProseMirror table th:focus {
  outline: none;
  box-shadow: inset 0 0 0 2px #7c3aed;
}

/* Column resize handle styling */
.tableColumnResizing {
  cursor: col-resize;
  user-select: none;
}

.columnResizeHandle {
  position: absolute;
  right: -0.75px;
  top: 0;
  bottom: 0;
  width: 1.5px;
  background-color: #7c3aed;
  pointer-events: none;
  z-index: 20;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.ProseMirror table th:hover .columnResizeHandle,
.ProseMirror table td:hover .columnResizeHandle {
  opacity: 1;
}

/* Selected cells styling */
.selectedCell {
  position: relative;
}

.selectedCell:after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background: rgba(124, 58, 237, 0.1);
  pointer-events: none;
  z-index: 10;
}

/* Visual cue for table controls */
.has-focus .ProseMirror table {
  outline: 2px solid rgba(124, 58, 237, 0.3);
  border-radius: 2px;
}
